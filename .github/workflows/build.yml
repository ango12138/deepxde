name: build

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  backend_tensorflow_v1:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install DeepXDE with requirements
        run: python -m pip install -e .

      - name: List environment
        run: python -m pip freeze

      - name: Integration tests with TensorFlow v1
        env:
          DDE_BACKEND: tensorflow.compat.v1
        run: |
          python -m pip install tensorflow
          cd examples/
          make run_all_examples
          make clean

  backend_tensorflow:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install DeepXDE with requirements
        run: python -m pip install -e .

      - name: List environment
        run: python -m pip freeze

      - name: Integration tests with TensorFlow
        env:
          DDE_BACKEND: tensorflow
        run: |
          python -m pip install tensorflow tensorflow-probability
          cd examples/
          make run_all_examples
          make clean

  backend_pytorch:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install DeepXDE with requirements
        run: python -m pip install -e .

      - name: List environment
        run: python -m pip freeze

      - name: Integration tests with PyTorch
        env:
          DDE_BACKEND: pytorch
        run: |
          python -m pip install torch
          cd examples/
          make run_all_examples
          make clean

  backend_jax:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install DeepXDE with requirements
        run: python -m pip install -e .

      - name: List environment
        run: python -m pip freeze

      - name: Integration tests with Jax
        env:
          DDE_BACKEND: jax
        run: |
          python -m pip install jax flax optax
          cd examples/
          make run_all_examples
          make clean

  backend_paddle:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install DeepXDE with requirements
        run: python -m pip install -e .

      - name: List environment
        run: python -m pip freeze

      - name: Integration tests with Paddle
        env:
          DDE_BACKEND: paddle
          ubuntu-latest: "https://www.paddlepaddle.org.cn/whl/linux/cpu-mkl/develop.html"
          macos-latest: "https://www.paddlepaddle.org.cn/whl/mac/cpu/develop.html"
          windows-latest: "https://www.paddlepaddle.org.cn/whl/windows/cpu-mkl-avx/develop.html"
        run: |
          python -m pip install paddlepaddle==0.0.0 -f ${{ env[matrix.os] }}
          cd examples/
          make run_all_examples
          make clean
